@use './utils';
@use 'sass:list';

.header {
    height: calc(100vh - 6rem);
    @include utils.padding;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    @include utils.section-bg('../public/backgrounds/bg-1.jpg', 189, cover);
    user-select: none;

    img {
        width: clamp(6rem, 10vw, 10rem);
        height: clamp(6rem, 10vw, 10rem);
        transform: rotateY(180deg);
        filter: grayscale(100%) sepia(100%) hue-rotate(140deg) saturate(250%);
        margin-bottom: 1rem;
    }

    h1 {
        font-size: 5rem;
    }
    h2 {
        font-family: utils.$font-mono;
        margin-left: 0.3rem;
    }
    h2:nth-of-type(2) {
        margin-top: -1rem;
    }

    @media (max-width: 800px) {
        height: calc(100vh - 5rem);

        h1 {
            font-size: 2.2rem;
        }
        h2 {
            font-size: 1rem;
        }
        h2:nth-of-type(2) {
            margin-top: -0.3rem;
        }
    }
}

.Introduction {
    $hue: 189;
    display: flex;
    gap: 1rem;
    @include utils.tabFocus($hue);

    @media (max-width: 800px) {
        flex-direction: column;
    }
}

.CTA {
    @include utils.section(332);
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    p {
        @include utils.padding;
        font-size: 1.2rem;

        @media (max-width: 800px) {
            font-size: 1rem;
        }
    }

    div {
        display: flex;
        flex-direction: column;
    }
}

.Stats {
    width: 200%;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    grid-gap: 1rem;

    @media (max-width: 800px) {
        width: 100%;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }

    div {
        @include utils.padding;
        display: flex;
        flex-direction: column;
        align-items: center;
        font-size: 2rem;
        user-select: none;

        $hue: 42;
        @include utils.section($hue, true);
        transition: color var(--time) ease-out, background-color var(--time) ease-out;

        @media (max-width: 800px) {
            font-size: 1.4rem;
        }

        span {
            font-family: utils.$font-mono;
            font-size: 1rem;
            font-weight: bold;
        }

        svg {
            $size: 1.4rem;
            width: $size;
            height: $size;
            margin-bottom: 0.6rem;
        }
    }
}

.Projects {
    $hue: 238;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    @include utils.tabFocus($hue);

    &Head {
        @include utils.head($hue, '../public/backgrounds/bg-2.jpg');
    }

    .project {
        display: flex;
        height: 400px;
        @media (max-width: 800px) {
            height: 100%;
            flex-direction: column-reverse;
        }

        $color: 0, 157, 192, 62, 279;
        $bg: '../public/backgrounds/bg-1.jpg', '../public/backgrounds/bg-2.jpg', '../public/backgrounds/bg-3.jpg',
            '../public/backgrounds/bg-4.jpg', '../public/backgrounds/bg-5.jpg';
        @for $i from 1 through 5 {
            &:nth-of-type(#{$i}) {
                & > .image {
                    @include utils.section-bg(list.nth($bg, $i), list.nth($color, $i), 150%);
                    @media (max-width: 800px) {
                        background-size: 150%;
                    }
                }
                & > .text {
                    @include utils.section(list.nth($color, $i));
                }
            }
        }

        & > .image {
            width: 100%;
            height: 100%;

            @media (max-width: 800px) {
                height: 30vh;
                background-size: 150%;
            }
        }

        & > .text {
            width: 60ch;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            @include utils.padding;
            @media (max-width: 800px) {
                width: 100%;
            }

            h1 {
                font-size: 2rem;
            }

            span {
                margin: 1rem 0;
                display: inline-block;
            }

            ul {
                display: flex;
                flex-wrap: wrap;
                margin-bottom: 1rem;

                li {
                    font-family: utils.$font-mono;
                    font-weight: bold;
                    font-size: 0.8rem;
                    margin-right: 1rem;
                }
            }

            svg {
                $size: 1.4rem;
                width: $size;
                height: $size;
            }

            a {
                color: inherit;
                text-decoration: none;
                margin-right: 1rem;
            }
        }
    }

    @include utils.section-button($hue, '../public/backgrounds/bg-2.jpg');
}

.Skills {
    $hue: 299;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    @include utils.tabFocus($hue);

    &Head {
        @include utils.head($hue, '../public/backgrounds/bg-3.jpg');
    }

    ul {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;

        li {
            padding: 1rem 2rem;
            text-align: center;
            flex-grow: 2;
            transition: color var(--time) ease-out, background-color var(--time) ease-out;
            font-family: utils.$font-mono;
            font-size: 1.4rem;
            @media (max-width: 800px) {
                font-size: 1rem;
            }

            @for $i from 1 through 27 {
                &:nth-of-type(#{$i}) {
                    $hue: random(360);
                    @include utils.section($hue, true);
                }
            }
        }
    }

    @include utils.section-button($hue, '../public/backgrounds/bg-3.jpg');
}

.Technologies {
    $hue: 120;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    @include utils.tabFocus($hue);

    &Head {
        @include utils.head($hue, '../public/backgrounds/bg-4.jpg');
    }

    ul {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;

        li {
            padding: 1rem 2rem;
            text-align: center;
            flex-grow: 2;
            transition: color var(--time) ease-out, background-color var(--time) ease-out;

            @for $i from 1 through 18 {
                &:nth-of-type(#{$i}) {
                    $hue: random(360);
                    @include utils.section($hue, true);
                }
            }

            h2 {
                pointer-events: none;
                font-family: utils.$font-mono;
                @media (max-width: 800px) {
                    font-size: 1.2rem;
                }
            }

            span {
                font-family: utils.$font-mono;
            }

            svg {
                $size: 3rem;
                width: $size;
                height: $size;
            }
        }
    }

    @include utils.section-button($hue, '../public/backgrounds/bg-4.jpg');
}

.About {
    $hue: 189;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    @include utils.tabFocus($hue);

    &Head {
        @include utils.head($hue, '../public/backgrounds/bg-5.jpg');
    }

    article {
        display: flex;
        color: hsl(0, 0, 100%);
        background-image: url('../public/backgrounds/bg-7.jpg');
        background-color: hsla(0, 0, 0, 0.2);
        background-size: cover;
        background-position: center 30%;
        background-blend-mode: overlay;

        ::selection {
            background: hsl(204, 100%, 10%);
        }

        p {
            @include utils.padding;
            max-width: 60ch;
            font-size: 1.2rem;
            @media (max-width: 800px) {
                font-size: 1rem;
            }

            a {
                font-size: 1.2rem;
                text-decoration: none;
                color: inherit;
                font-family: utils.$font-mono;
                font-weight: bold;
                display: inline-flex;
                align-items: center;

                svg {
                    $size: 1.5rem;
                    width: $size;
                    height: $size;

                    &:last-of-type {
                        opacity: 0;
                        transition: var(--time) ease;
                    }
                }

                &:hover {
                    svg:last-of-type {
                        opacity: 1;
                    }
                }
            }
        }
    }

    @include utils.section-button($hue, '../public/backgrounds/bg-5.jpg');
}

.Contact {
    $hue: 0;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    @include utils.tabFocus($hue);

    &Head {
        @include utils.head($hue, '../public/backgrounds/bg-6.jpg');
    }

    .contact_links {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(2, 1fr);
        grid-template-areas:
            'mail mail telegram telegram'
            'link1 link2 link3 link4';
        gap: 0.5rem;

        @media (max-width: 800px) {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(4, 1fr);
            grid-template-areas:
                'mail mail'
                'telegram telegram'
                'link1 link2'
                'link3 link4';
        }

        a {
            padding: 2rem;
            width: 100%;
            height: 100%;
            display: grid;
            place-items: center;
            transition: color var(--time) ease-out, background-color var(--time) ease-out;

            @media (max-width: 800px) {
                padding: 1rem;
            }

            $contact-hue: 0, 60, 201, 318, 150, 250;
            @for $i from 1 through 6 {
                &:nth-of-type(#{$i}) {
                    @include utils.section(list.nth($contact-hue, $i), true);
                }
            }

            svg {
                --size: 3rem;
                width: var(--size);
                height: var(--size);

                @media (max-width: 800px) {
                    --size: 2rem;
                }
            }

            &:nth-of-type(1),
            &:nth-of-type(2) {
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 1rem;
                font-size: 1.4rem;
                font-family: utils.$font-mono;
                font-weight: bolder;
                text-decoration: none;

                @media (max-width: 800px) {
                    font-size: 1.2rem;
                }
            }
        }
    }
}
