@use './utils';

.header {
    height: calc(100vh - 6rem);
    @include utils.padding;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    @include utils.section-bg('../public/backgrounds/bg-4.jpg', 325, cover);

    h1 {
        font-size: 5rem;
    }
    h2 {
        font-family: utils.$font-mono;
        margin-left: 0.3rem;
    }
    h2:nth-of-type(2) {
        margin-top: -1rem;
    }

    @media (max-width: 800px) {
        height: calc(100vh - 5rem);

        h1 {
            font-size: 2.2rem;
        }
        h2 {
            font-size: 1rem;
        }
        h2:nth-of-type(2) {
            margin-top: -0.3rem;
        }
    }
}

.clock {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-areas: 'date clock clock day';
    gap: 1rem;

    @media (max-width: 800px) {
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto;
        grid-template-areas: 'day date' 'clock clock';
    }

    .time {
        grid-area: clock;
    }
    .date {
        grid-area: date;
    }
    .day {
        grid-area: day;
    }

    & > * {
        @include utils.padding;
        display: flex;
        flex-direction: column;
        align-items: center;
        font-family: utils.$font-mono;
        font-size: 2rem;
        font-weight: bold;

        $hue: 42;
        color: hsl($hue, 100%, 10%);
        background-color: hsl($hue, 100%, 70%);
        transition: color var(--time) ease-out, background-color var(--time) ease-out;

        @media (max-width: 800px) {
            font-size: 1.4rem;
        }

        &:hover {
            color: hsl($hue, 100%, 70%);
            background-color: hsl($hue, 100%, 10%);

            &::selection {
                background: hsl($hue, 100%, 70%);
                color: hsl($hue, 100%, 10%);
            }
        }

        &::selection {
            background: hsl($hue, 100%, 10%);
            color: hsl($hue, 100%, 70%);
        }

        svg {
            --size: 1.4rem;
            width: var(--size);
            height: var(--size);
            margin-bottom: 0.6rem;
        }
    }
}

.about {
    display: flex;
    background-color: hsl(189, 100%, 70%);
    ::selection {
        background: hsl(189, 100%, 10%);
        color: hsl(189, 100%, 70%);
    }

    p {
        @include utils.padding;
        max-width: 60ch;

        a {
            font-size: 1.2rem;
            text-decoration: none;
            color: inherit;
            font-family: utils.$font-mono;
            font-weight: bold;
            display: inline-flex;
            align-items: center;

            svg {
                --size: 1.5rem;
                width: var(--size);
                height: var(--size);
            }
        }
    }

    img {
        width: 50%;
    }

    @media (max-width: 800px) {
        flex-direction: column-reverse;

        img {
            width: 100%;
        }
    }
}

.stats {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;

    .bar {
        width: 100%;
        display: flex;
        gap: 0.3rem;

        .language {
            width: var(--percent);
            height: 2rem;
        }
    }

    .legends {
        display: flex;
        justify-content: space-between;
        user-select: none;
        pointer-events: none;
        flex-wrap: wrap;
        gap: 1rem;

        span {
            position: relative;
            font-family: utils.$font-mono;
            font-weight: bold;
            font-size: 1rem;
            margin-left: 1.3rem;
            line-height: 1;

            &::after {
                content: '';
                position: absolute;
                top: 0;
                left: -1.3rem;
                border: 0.45rem solid transparent;
            }
        }
    }

    @for $i from 1 through 20 {
        $hue: random(360);

        .language:nth-of-type(#{$i}) {
            background-color: hsl($hue, 100%, 70%);
            color: hsl($hue, 100%, 10%);
        }
        .legends {
            span:nth-of-type(#{$i}) {
                color: hsl($hue, 100%, 70%);
                &::after {
                    border-color: hsl($hue, 100%, 70%);
                    border-bottom-color: transparent;
                    border-left-color: transparent;
                }
            }
        }
    }
}

.fact {
    $hue: 115;
    @include utils.padding();
    @include utils.section($hue);
    display: grid;
    place-items: center;
    gap: 1rem;
    font-size: 1.2rem;
    text-align: center;

    &::selection {
        background-color: hsl($hue, 100%, 10%);
        color: hsl($hue, 100%, 70%);
    }

    svg {
        --size: 3rem;
        width: var(--size);
        height: var(--size);
    }

    @media (max-width: 800px) {
        font-size: 1rem;
        svg {
            --size: 2rem;
        }
    }
}

.footer {
    @include utils.section(325);
    @include utils.padding;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    text-align: center;

    p {
        font-family: utils.$font-mono;
        font-weight: bold;
    }
    span {
        margin-top: 0.5rem;
        font-size: 0.8rem;
    }
}
